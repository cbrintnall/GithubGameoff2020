[gd_scene load_steps=26 format=2]

[ext_resource path="res://assets/textures/ui/main_menu_background.png" type="Texture" id=1]
[ext_resource path="res://themes/main.tres" type="Theme" id=2]
[ext_resource path="res://scenes/managers/player_prefs.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/ui/GUI.png" type="Texture" id=4]
[ext_resource path="res://assets/audio/sfx/ui/button_hover.wav" type="AudioStream" id=5]
[ext_resource path="res://assets/audio/music/day/James Hammond - Video Game Inspired Songs and Loops (Batch 3) - 01 Solace.ogg" type="AudioStream" id=6]
[ext_resource path="res://assets/textures/ui/moon_for_background.png" type="Texture" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends CanvasLayer

onready var moon_tween = get_node(\"MoonTween\")
onready var music_player = get_node(\"Music\")
onready var button_hover = get_node(\"AudioStreamPlayer\")
onready var buttons_tween = get_node(\"Tween\")
onready var play_button = get_node(\"MarginContainer2/VBoxContainer/PlayButton/TextureButton\")
onready var options_button = get_node(\"MarginContainer2/VBoxContainer/OptionsButton/TextureButton\")
onready var quit_button = get_node(\"MarginContainer2/VBoxContainer/QuitButton/TextureButton\")
onready var buttons_base = get_node(\"MarginContainer2/VBoxContainer\")
onready var play_button_base = get_node(\"MarginContainer2/VBoxContainer/PlayButton\")
onready var options_button_base = get_node(\"MarginContainer2/VBoxContainer/OptionsButton\")
onready var quit_button_base = get_node(\"MarginContainer2/VBoxContainer/QuitButton\")

func _ready():
	var tree = get_tree()
	var prefs_base = get_node(\"PlayerPrefs\")
	
	play_button.connect(\"button_down\", tree, \"change_scene\", [ \"res://scenes/ui/Intro.tscn\" ])
	quit_button.connect(\"button_down\", tree, \"quit\")
	options_button.connect(\"button_down\", get_node(\"PlayerPrefs/PlayerPreferences/MarginContainer\"), \"set_visible\", [ true ])
	play_button.connect(\"mouse_entered\", button_hover, \"play\")
	quit_button.connect(\"mouse_entered\", button_hover, \"play\")
	options_button.connect(\"mouse_entered\", button_hover, \"play\")

	prefs_base.register_command(\"generate\", funcref(self, \"_on_generate\"))
	
	var args = OS.get_cmdline_args()

	if len(args) > 0:
		_on_generate(Array(args).slice(1, len(args)-1))
		
	music_player.connect(\"finished\", music_player, \"play\")

func _on_generate(args: Array):
	var resource_initializer = get_node(\"ResourceInitializer\")

	match args:
		[ \"crops\" ]:
			resource_initializer.create_crop_resource(\"res://meta/crops.json\")
		[ \"plants\" ]:
			resource_initializer.create_plant_resource(\"res://meta/plants.json\")
		[ \"seeds\" ]:
			resource_initializer.create_seed_resource(\"res://meta/seeds.json\")
		[ \"resources\" ]:
			resource_initializer.create_ground_resource(\"res://meta/resources.json\")
		[ \"all\" ]:
			resource_initializer.create_crop_resource(\"res://meta/crops.json\")
			resource_initializer.create_plant_resource(\"res://meta/plants.json\")
			resource_initializer.create_seed_resource(\"res://meta/seeds.json\")
			resource_initializer.create_ground_resource(\"res://meta/resources.json\")
		[ var cmd, \"quit\" ]:
			_on_generate([ cmd ])
			get_tree().quit(0)

func _tween_buttons():
	var all_buttons = [
		play_button_base,
		options_button_base,
		quit_button_base
	]

	for i in range(all_buttons.size()):
		var button = all_buttons[i]

		button.connect(\"mouse_enter\", self, \"_on_mouse_enter\", [ button ])
		button.connect(\"mouse_exit\", self, \"_on_mouse_exit\", [ button ])
	
#		button.visible = false
#		buttons_tween.interpolate_property(
#			button,
#			\"rect_position\",
#			Vector2(
#				button.rect_position.x + button.rect_size.x,
#				button.rect_position.y
#			),
#			button.rect_global_position,
#			1.0,
#			Tween.TRANS_BOUNCE,
#			Tween.EASE_OUT,
#			0.25 * (i+1)
#		)

	buttons_tween.connect(\"tween_started\", self, \"_make_visible\")
	buttons_tween.start()
	
	yield(buttons_tween,\"tween_all_completed\")
	
	buttons_base.queue_sort()

func _on_button_enter(button):
	buttons_tween.interpolate_property(
		button,
		\"rect_scale\",
		Vector2.ONE,
		Vector2.ONE * 2.0,
		.1,
		Tween.TRANS_CUBIC,
		Tween.EASE_OUT
	)
	buttons_tween.start()
	
func _on_button_exit(button):
	button.rect_scale = Vector2.ONE
#	buttons_tween.interpolate_property(
#		button,
#		\"rect_position\",
#		button.rect_position,
#		button.rect_position - (Vector2.LEFT * 30.0),
#		.1,
#		Tween.TRANS_CUBIC,
#		Tween.EASE_OUT
#	)
#	buttons_tween.start()

func _make_visible(button, second):
	button.visible = true
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

func create_ground_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	
	for resource in data.get(\"resources\", []):
		var new_resource = GroundResource.new()
		
		new_resource.on_break = load(resource.get(\"on_break_path\"))
		new_resource.ground_resource_name = resource.get(\"name\")
		new_resource.normal_texture = load(resource.get(\"normal_texture_path\"))
		new_resource.hovered_texture = load(resource.get(\"hovered_texture_path\"))
		
		var drop_table := {}
		var def_table = resource.get(\"drop_table\", {})
		
		# translate the json version to ingame
		for item in def_table:
			drop_table[load(item)] = def_table[item]
			
		new_resource.drop_table = drop_table
		
		ResourceSaver.save(meta.get(\"output_folder\", \"res://\") + _normalize_path(resource.get(\"name\", \"NO_NAME\")) + \".tres\", new_resource)

func create_crop_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
		
	for crop in data.get(\"resources\", []):
		var new_crop = Item.new()
		
		new_crop.value = crop.get(\"value\", 0)
		new_crop.item_name = crop.get(\"name\", \"NO_NAME\")
		new_crop.texture = load(meta.get(\"texture_base\", \"res://\") + crop.get(\"texture_path\", \"\"))
		
		ResourceSaver.save(meta.get(\"output_folder\", \"res://\") + _normalize_path(new_crop.item_name) + \".tres\", new_crop)
	
func create_plant_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	var frame_base = meta.get(\"frames_base\", \"res://\")
	var frame_size_base = meta.get(\"frame_size\", {})
	var frame_size = Vector2(
		frame_size_base.get(\"x\", 16),
		frame_size_base.get(\"y\", 16)
	)
	
	for plant in data.get(\"resources\", []):
		var plant_resource = GrowingPlant.new()
		var texture = load(frame_base + plant.get(\"frames_path\"))
		var sprite_frames = SpriteFrames.new()
		var frame_count = texture.get_size().x/frame_size.x
		var frames := []

		# cut up all the frames according to their specification in the def
		for i in range(0, frame_count):
			var frame_texture = AtlasTexture.new()

			frame_texture.atlas = texture
			frame_texture.region = Rect2(
				Vector2(i * frame_size.x, 0),
				frame_size
			)

			sprite_frames.add_frame(\"default\", frame_texture)

		sprite_frames.set_animation_loop(\"default\", false)
		plant_resource.grow_frames = sprite_frames
		plant_resource.required_energy = plant.get(\"required_energy\", 100)
		plant_resource.finished_plant = load(meta.get(\"crops_base\") + _normalize_path(plant.get(\"name\", \"NO_NAME\")) + \".tres\")
		
		var out_name = plant.get(\"name\", \"NO_NAME\")
		var full_output_path = \"{base}/{name}.tres\".format({
			\"base\": meta.get(\"output_folder\", \"res://garbage\"),
			\"name\": _normalize_path(out_name)
		})
		ResourceSaver.save(full_output_path, plant_resource)

func create_seed_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	
	for s in data.get(\"resources\", []):
		var seed_item = Item.new()

		seed_item.item_name = s[\"name\"]
		seed_item.value = s.get(\"value\", 0)
		seed_item.plant = load(meta.get(\"plants_folder\", \"res://\") + s.get(\"plant_path\"))
		
		var rect = s.get(\"texture_rect\")
		if rect:
			seed_item.texture = AtlasTexture.new()
			seed_item.texture.atlas = load(s.get(\"texture_path\"))
			seed_item.texture.region = Rect2(
				rect[\"x\"],
				rect[\"y\"],
				rect[\"width\"],
				rect[\"height\"]
			)
		else:
			seed_item.texture = load(s.get(\"texture_path\"))

		var full_output_path = \"{base}/{name}.tres\".format({
			\"base\": meta.get(\"output_folder\", \"res://garbage\"),
			\"name\": _normalize_path(seed_item.item_name)
		})

		ResourceSaver.save(full_output_path, seed_item)

func _get_data_for(path: String) -> Dictionary:
	var definition = File.new()
	definition.open(path, File.READ)
	var data = definition.get_as_text()
	definition.close()
	var parse_result = JSON.parse(data)
	if parse_result.error == OK:
		return parse_result.result
	else:
		print(\"error parsing crops json\")
		get_tree().quit(1)
	return {}

func _normalize_path(path: String):
	return path.replace(\" \", \"_\").to_lower()
"

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 4 )
region = Rect2( 145, 81, 46, 14 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 4 )
region = Rect2( 145, 98, 46, 13 )

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.0194805, 0.324675, 0.88961, 0.99026 )
colors = PoolColorArray( 0.682353, 0, 0, 1, 0.890625, 0.388344, 0.0869751, 1, 1, 0.960784, 0.0352941, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="Curve" id=7]
max_value = 100.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.809668, 100 ), -55.1667, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=8]
curve = SubResource( 7 )

[sub_resource type="Curve" id=9]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -3.27075, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=10]
curve = SubResource( 9 )

[sub_resource type="ParticlesMaterial" id=11]
emission_shape = 2
emission_box_extents = Vector3( 16, 1, 1 )
flag_disable_z = true
spread = 180.0
flatness = 1.0
gravity = Vector3( 0, -98, 0 )
initial_velocity = 10.0
initial_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 2.0
linear_accel_random = 1.0
radial_accel = 9.25
damping_curve = SubResource( 8 )
scale = 4.0
scale_random = 1.0
scale_curve = SubResource( 10 )
color_ramp = SubResource( 6 )
hue_variation = 0.1
hue_variation_random = 1.0

[sub_resource type="Gradient" id=12]
offsets = PoolRealArray( 0.217532, 0.785714, 1 )
colors = PoolColorArray( 0, 0.572549, 0.701961, 1, 0.179688, 1, 0.942322, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="Curve" id=14]
max_value = 100.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 100 ), 494.35, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=15]
curve = SubResource( 14 )

[sub_resource type="Curve" id=16]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=17]
curve = SubResource( 16 )

[sub_resource type="ParticlesMaterial" id=18]
emission_shape = 2
emission_box_extents = Vector3( 40, 10, 1 )
flag_disable_z = true
spread = 180.0
gravity = Vector3( 20, 20, 0 )
initial_velocity = 0.5
angular_velocity = 720.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 30.0
linear_accel_random = 1.0
radial_accel = 30.0
radial_accel_random = 1.0
damping_random = 1.0
damping_curve = SubResource( 15 )
angle = -720.0
scale = 3.0
scale_random = 1.0
scale_curve = SubResource( 17 )
color_ramp = SubResource( 13 )
hue_variation = 0.01

[node name="MainMenu" type="CanvasLayer"]
script = SubResource( 1 )

[node name="MoonTween" type="Tween" parent="."]

[node name="ResourceInitializer" type="Node2D" parent="."]
script = SubResource( 2 )

[node name="MarginContainer" type="MarginContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="MarginContainer"]
margin_right = 1280.0
margin_bottom = 720.0
texture = ExtResource( 1 )
expand = true

[node name="TextureRect2" type="TextureRect" parent="MarginContainer"]
margin_right = 1280.0
margin_bottom = 720.0
texture = ExtResource( 7 )
expand = true

[node name="MarginContainer2" type="MarginContainer" parent="."]
anchor_left = 0.75
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -0.280029
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
size_flags_vertical = 3
custom_constants/margin_right = 12
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer2"]
margin_right = 308.0
margin_bottom = 720.0
grow_horizontal = 2
grow_vertical = 2
size_flags_vertical = 3
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PlayButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 269.0
margin_right = 308.0
margin_bottom = 327.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/PlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 3 )
texture_pressed = SubResource( 4 )
texture_hover = SubResource( 4 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/PlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/PlayButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 280.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Play"
align = 1
valign = 1

[node name="OptionsButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 331.0
margin_right = 308.0
margin_bottom = 389.0
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/OptionsButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 3 )
texture_pressed = SubResource( 4 )
texture_hover = SubResource( 4 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/OptionsButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/OptionsButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 280.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Options"
align = 1
valign = 1

[node name="QuitButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 393.0
margin_right = 308.0
margin_bottom = 451.0
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/QuitButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 3 )
texture_pressed = SubResource( 4 )
texture_hover = SubResource( 4 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/QuitButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 302.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/QuitButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 280.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Quit"
align = 1
valign = 1

[node name="Tween" type="Tween" parent="."]

[node name="PlayerPrefs" parent="." instance=ExtResource( 3 )]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[node name="Music" type="AudioStreamPlayer" parent="."]
pause_mode = 2
stream = ExtResource( 6 )
autoplay = true
bus = "Music"

[node name="Decorations" type="Node2D" parent="."]
visible = false

[node name="Fire" type="Particles2D" parent="Decorations"]
position = Vector2( 275, 427.222 )
z_index = 2
amount = 150
process_material = SubResource( 11 )

[node name="WaterfallBase" type="Particles2D" parent="Decorations"]
position = Vector2( 658.983, 706.987 )
z_index = 2
amount = 500
process_material = SubResource( 18 )

[editable path="PlayerPrefs"]
