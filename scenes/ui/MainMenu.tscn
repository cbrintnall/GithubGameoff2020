[gd_scene load_steps=35 format=2]

[ext_resource path="res://assets/textures/ui/main_menu_background.png" type="Texture" id=1]
[ext_resource path="res://themes/main.tres" type="Theme" id=2]
[ext_resource path="res://assets/ui/GUI.png" type="Texture" id=4]
[ext_resource path="res://assets/audio/sfx/ui/button_hover.wav" type="AudioStream" id=5]
[ext_resource path="res://assets/audio/music/day/James Hammond - Video Game Inspired Songs and Loops (Batch 3) - 01 Solace.ogg" type="AudioStream" id=6]
[ext_resource path="res://assets/textures/ui/moon_for_background.png" type="Texture" id=7]
[ext_resource path="res://assets/how_to/CollectSeeds.png" type="Texture" id=8]
[ext_resource path="res://assets/how_to/PlantSeeds.png" type="Texture" id=9]
[ext_resource path="res://assets/how_to/FightOffEnemies.png" type="Texture" id=10]
[ext_resource path="res://assets/how_to/PurchaseTowers.png" type="Texture" id=11]
[ext_resource path="res://assets/how_to/SellCrops.png" type="Texture" id=12]
[ext_resource path="res://scenes/scripts/main_menu.gd" type="Script" id=13]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

func create_ground_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	
	for resource in data.get(\"resources\", []):
		var new_resource = GroundResource.new()
		
		new_resource.on_break = load(resource.get(\"on_break_path\"))
		new_resource.ground_resource_name = resource.get(\"name\")
		new_resource.normal_texture = load(resource.get(\"normal_texture_path\"))
		new_resource.hovered_texture = load(resource.get(\"hovered_texture_path\"))
		
		var drop_table := {}
		var def_table = resource.get(\"drop_table\", {})
		
		# translate the json version to ingame
		for item in def_table:
			drop_table[load(item)] = def_table[item]
			
		new_resource.drop_table = drop_table
		
		ResourceSaver.save(meta.get(\"output_folder\", \"res://\") + _normalize_path(resource.get(\"name\", \"NO_NAME\")) + \".tres\", new_resource)

func create_crop_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
		
	for crop in data.get(\"resources\", []):
		var new_crop = Item.new()
		
		new_crop.value = crop.get(\"value\", 0)
		new_crop.item_name = crop.get(\"name\", \"NO_NAME\")
		new_crop.texture = load(meta.get(\"texture_base\", \"res://\") + crop.get(\"texture_path\", \"\"))
		
		ResourceSaver.save(meta.get(\"output_folder\", \"res://\") + _normalize_path(new_crop.item_name) + \".tres\", new_crop)
	
func create_plant_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	var frame_base = meta.get(\"frames_base\", \"res://\")
	var frame_size_base = meta.get(\"frame_size\", {})
	var frame_size = Vector2(
		frame_size_base.get(\"x\", 16),
		frame_size_base.get(\"y\", 16)
	)
	
	for plant in data.get(\"resources\", []):
		var plant_resource = GrowingPlant.new()
		var texture = load(frame_base + plant.get(\"frames_path\"))
		var sprite_frames = SpriteFrames.new()
		var frame_count = texture.get_size().x/frame_size.x
		var frames := []

		# cut up all the frames according to their specification in the def
		for i in range(0, frame_count):
			var frame_texture = AtlasTexture.new()

			frame_texture.atlas = texture
			frame_texture.region = Rect2(
				Vector2(i * frame_size.x, 0),
				frame_size
			)

			sprite_frames.add_frame(\"default\", frame_texture)

		sprite_frames.set_animation_loop(\"default\", false)
		plant_resource.grow_frames = sprite_frames
		plant_resource.required_energy = plant.get(\"required_energy\", 100)
		plant_resource.finished_plant = load(meta.get(\"crops_base\") + _normalize_path(plant.get(\"name\", \"NO_NAME\")) + \".tres\")
		
		var out_name = plant.get(\"name\", \"NO_NAME\")
		var full_output_path = \"{base}/{name}.tres\".format({
			\"base\": meta.get(\"output_folder\", \"res://garbage\"),
			\"name\": _normalize_path(out_name)
		})
		ResourceSaver.save(full_output_path, plant_resource)

func create_seed_resource(definition_path: String):
	var data = _get_data_for(definition_path)
	var meta = data.get(\"meta\", {})
	
	for s in data.get(\"resources\", []):
		var seed_item = Item.new()

		seed_item.item_name = s[\"name\"]
		seed_item.value = s.get(\"value\", 0)
		seed_item.plant = load(meta.get(\"plants_folder\", \"res://\") + s.get(\"plant_path\"))
		
		var rect = s.get(\"texture_rect\")
		if rect:
			seed_item.texture = AtlasTexture.new()
			seed_item.texture.atlas = load(s.get(\"texture_path\"))
			seed_item.texture.region = Rect2(
				rect[\"x\"],
				rect[\"y\"],
				rect[\"width\"],
				rect[\"height\"]
			)
		else:
			seed_item.texture = load(s.get(\"texture_path\"))

		var full_output_path = \"{base}/{name}.tres\".format({
			\"base\": meta.get(\"output_folder\", \"res://garbage\"),
			\"name\": _normalize_path(seed_item.item_name)
		})

		ResourceSaver.save(full_output_path, seed_item)

func _get_data_for(path: String) -> Dictionary:
	var definition = File.new()
	definition.open(path, File.READ)
	var data = definition.get_as_text()
	definition.close()
	var parse_result = JSON.parse(data)
	if parse_result.error == OK:
		return parse_result.result
	else:
		print(\"error parsing crops json\")
		get_tree().quit(1)
	return {}

func _normalize_path(path: String):
	return path.replace(\" \", \"_\").to_lower()
"

[sub_resource type="DynamicFontData" id=2]
font_path = "res://assets/fonts/MinimalPixel v2.ttf"

[sub_resource type="DynamicFont" id=3]
size = 70
font_data = SubResource( 2 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 4 )
region = Rect2( 145, 81, 46, 14 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 4 )
region = Rect2( 145, 98, 46, 13 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 4 )
region = Rect2( 2, 34, 44, 44 )

[sub_resource type="DynamicFontData" id=7]
font_path = "res://assets/fonts/MinimalPixel v2.ttf"

[sub_resource type="DynamicFont" id=8]
size = 35
font_data = SubResource( 7 )

[sub_resource type="Gradient" id=9]
offsets = PoolRealArray( 0.0194805, 0.324675, 0.88961, 0.99026 )
colors = PoolColorArray( 0.682353, 0, 0, 1, 0.890625, 0.388344, 0.0869751, 1, 1, 0.960784, 0.0352941, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=10]
gradient = SubResource( 9 )

[sub_resource type="Curve" id=11]
max_value = 100.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.809668, 100 ), -55.1667, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=12]
curve = SubResource( 11 )

[sub_resource type="Curve" id=13]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), -3.27075, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=14]
curve = SubResource( 13 )

[sub_resource type="ParticlesMaterial" id=15]
emission_shape = 2
emission_box_extents = Vector3( 16, 1, 1 )
flag_disable_z = true
spread = 180.0
flatness = 1.0
gravity = Vector3( 0, -98, 0 )
initial_velocity = 10.0
initial_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 2.0
linear_accel_random = 1.0
radial_accel = 9.25
damping_curve = SubResource( 12 )
scale = 4.0
scale_random = 1.0
scale_curve = SubResource( 14 )
color_ramp = SubResource( 10 )
hue_variation = 0.1
hue_variation_random = 1.0

[sub_resource type="Gradient" id=16]
offsets = PoolRealArray( 0.217532, 0.785714, 1 )
colors = PoolColorArray( 0, 0.572549, 0.701961, 1, 0.179688, 1, 0.942322, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=17]
gradient = SubResource( 16 )

[sub_resource type="Curve" id=18]
max_value = 100.0
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 100 ), 494.35, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=19]
curve = SubResource( 18 )

[sub_resource type="Curve" id=20]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=21]
curve = SubResource( 20 )

[sub_resource type="ParticlesMaterial" id=22]
emission_shape = 2
emission_box_extents = Vector3( 40, 10, 1 )
flag_disable_z = true
spread = 180.0
gravity = Vector3( 20, 20, 0 )
initial_velocity = 0.5
angular_velocity = 720.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 30.0
linear_accel_random = 1.0
radial_accel = 30.0
radial_accel_random = 1.0
damping_random = 1.0
damping_curve = SubResource( 19 )
angle = -720.0
scale = 3.0
scale_random = 1.0
scale_curve = SubResource( 21 )
color_ramp = SubResource( 17 )
hue_variation = 0.01

[node name="MainMenu" type="CanvasLayer"]
script = ExtResource( 13 )

[node name="MoonTween" type="Tween" parent="."]

[node name="ResourceInitializer" type="Node2D" parent="."]
script = SubResource( 1 )

[node name="MarginContainer" type="MarginContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="MarginContainer"]
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 1 )
expand = true

[node name="TextureRect2" type="TextureRect" parent="MarginContainer"]
margin_right = 320.0
margin_bottom = 180.0
texture = ExtResource( 7 )
expand = true

[node name="MarginContainer2" type="MarginContainer" parent="."]
anchor_left = 0.75
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -26.14
margin_right = 25.86
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
size_flags_vertical = 3
custom_constants/margin_right = 32
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer2"]
margin_right = 340.0
margin_bottom = 318.0
grow_horizontal = 2
grow_vertical = 2
size_flags_vertical = 3
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer3" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_right = 340.0
margin_bottom = 70.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/MarginContainer3"]
margin_right = 340.0
margin_bottom = 70.0
custom_fonts/font = SubResource( 3 )
text = "Moonshot"
align = 1
valign = 1

[node name="PlayButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 74.0
margin_right = 340.0
margin_bottom = 132.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/PlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 4 )
texture_pressed = SubResource( 5 )
texture_hover = SubResource( 5 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/PlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/PlayButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 312.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Play"
align = 1
valign = 1

[node name="HowToPlayButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 136.0
margin_right = 340.0
margin_bottom = 194.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/HowToPlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
grow_horizontal = 2
grow_vertical = 2
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 4 )
texture_pressed = SubResource( 5 )
texture_hover = SubResource( 5 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/HowToPlayButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/HowToPlayButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 312.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "How To Play"
align = 1
valign = 1

[node name="OptionsButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 198.0
margin_right = 340.0
margin_bottom = 256.0
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/OptionsButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 4 )
texture_pressed = SubResource( 5 )
texture_hover = SubResource( 5 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/OptionsButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/OptionsButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 312.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Options"
align = 1
valign = 1

[node name="QuitButton" type="MarginContainer" parent="MarginContainer2/VBoxContainer"]
margin_top = 260.0
margin_right = 340.0
margin_bottom = 318.0
mouse_filter = 1
size_flags_horizontal = 3
custom_constants/margin_right = 6
custom_constants/margin_top = 6
custom_constants/margin_left = 6
custom_constants/margin_bottom = 6

[node name="TextureButton" type="TextureButton" parent="MarginContainer2/VBoxContainer/QuitButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
rect_pivot_offset = Vector2( 0.5, 0.5 )
mouse_filter = 1
mouse_default_cursor_shape = 2
texture_normal = SubResource( 4 )
texture_pressed = SubResource( 5 )
texture_hover = SubResource( 5 )
expand = true
stretch_mode = 5

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer2/VBoxContainer/QuitButton"]
margin_left = 6.0
margin_top = 6.0
margin_right = 334.0
margin_bottom = 52.0
mouse_filter = 2
custom_constants/margin_right = 16
custom_constants/margin_top = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16

[node name="Label" type="Label" parent="MarginContainer2/VBoxContainer/QuitButton/MarginContainer"]
margin_left = 16.0
margin_top = 16.0
margin_right = 312.0
margin_bottom = 30.0
theme = ExtResource( 2 )
text = "Quit"
align = 1
valign = 1

[node name="HowToPlay" type="MarginContainer" parent="."]
visible = false
anchor_right = 0.537
anchor_bottom = 1.0
margin_right = -0.359985
margin_bottom = -1.0
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NinePatchRect" type="NinePatchRect" parent="HowToPlay"]
margin_right = 240.0
margin_bottom = 659.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = SubResource( 6 )
patch_margin_left = 6
patch_margin_top = 6
patch_margin_right = 6
patch_margin_bottom = 6
axis_stretch_horizontal = 2
axis_stretch_vertical = 2

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay"]
margin_right = 240.0
margin_bottom = 659.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="HowToPlay/MarginContainer"]
margin_right = 240.0
margin_bottom = 659.0
custom_constants/separation = 0
alignment = 1

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 30.0
margin_right = 687.0
margin_bottom = 65.0
custom_fonts/font = SubResource( 8 )
text = "How To Play:"
align = 1
valign = 1

[node name="CollectSeeds" type="HBoxContainer" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 65.0
margin_right = 687.0
margin_bottom = 193.0
alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/CollectSeeds"]
margin_right = 144.0
margin_bottom = 128.0
custom_constants/margin_left = 16

[node name="TextureRect" type="TextureRect" parent="HowToPlay/MarginContainer/VBoxContainer/CollectSeeds/MarginContainer"]
margin_left = 16.0
margin_right = 144.0
margin_bottom = 128.0
rect_min_size = Vector2( 128, 128 )
size_flags_horizontal = 2
size_flags_vertical = 2
size_flags_stretch_ratio = 0.5
texture = ExtResource( 8 )
expand = true
stretch_mode = 6

[node name="MarginContainer2" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/CollectSeeds"]
margin_left = 148.0
margin_right = 687.0
margin_bottom = 128.0
size_flags_horizontal = 3
custom_constants/margin_right = 16
custom_constants/margin_left = 16

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer/CollectSeeds/MarginContainer2"]
margin_left = 16.0
margin_right = 523.0
margin_bottom = 128.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 2 )
text = "Collect seeds from grass growing on your farm."
valign = 1
autowrap = true

[node name="PlantSeeds" type="HBoxContainer" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 193.0
margin_right = 687.0
margin_bottom = 321.0
alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/PlantSeeds"]
margin_right = 144.0
margin_bottom = 128.0
custom_constants/margin_left = 16

[node name="TextureRect" type="TextureRect" parent="HowToPlay/MarginContainer/VBoxContainer/PlantSeeds/MarginContainer"]
margin_left = 16.0
margin_right = 144.0
margin_bottom = 128.0
rect_min_size = Vector2( 128, 128 )
size_flags_horizontal = 2
size_flags_vertical = 2
size_flags_stretch_ratio = 0.5
texture = ExtResource( 9 )
expand = true
stretch_mode = 6

[node name="MarginContainer2" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/PlantSeeds"]
margin_left = 148.0
margin_right = 687.0
margin_bottom = 128.0
size_flags_horizontal = 3
custom_constants/margin_right = 16
custom_constants/margin_left = 16

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer/PlantSeeds/MarginContainer2"]
margin_left = 16.0
margin_right = 523.0
margin_bottom = 128.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 2 )
text = "Plant the seeds, the moon fragment will provide nutrients at a regular cadence to them. But, don't overload it as you may drain all the energy."
valign = 1
autowrap = true

[node name="SellCrops" type="HBoxContainer" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 321.0
margin_right = 687.0
margin_bottom = 449.0
alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/SellCrops"]
margin_right = 144.0
margin_bottom = 128.0
custom_constants/margin_left = 16

[node name="TextureRect" type="TextureRect" parent="HowToPlay/MarginContainer/VBoxContainer/SellCrops/MarginContainer"]
margin_left = 16.0
margin_right = 144.0
margin_bottom = 128.0
rect_min_size = Vector2( 128, 128 )
size_flags_horizontal = 2
size_flags_vertical = 2
size_flags_stretch_ratio = 0.5
texture = ExtResource( 12 )
expand = true
stretch_mode = 6

[node name="MarginContainer2" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/SellCrops"]
margin_left = 148.0
margin_right = 687.0
margin_bottom = 128.0
size_flags_horizontal = 3
custom_constants/margin_right = 16
custom_constants/margin_left = 16

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer/SellCrops/MarginContainer2"]
margin_left = 16.0
margin_right = 523.0
margin_bottom = 128.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 2 )
text = "Sell your crops and other goods. The shipment container will blast off a little before night time. Once the shipping container has made its way all the way up you'll receive your payment. Use that time to plop down some towers."
valign = 1
autowrap = true

[node name="PurchaseTowers" type="HBoxContainer" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 449.0
margin_right = 687.0
margin_bottom = 561.0
alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/PurchaseTowers"]
margin_right = 128.0
margin_bottom = 112.0
custom_constants/margin_left = 16

[node name="TextureRect" type="TextureRect" parent="HowToPlay/MarginContainer/VBoxContainer/PurchaseTowers/MarginContainer"]
margin_left = 16.0
margin_right = 128.0
margin_bottom = 112.0
rect_min_size = Vector2( 112, 112 )
size_flags_horizontal = 2
size_flags_vertical = 2
size_flags_stretch_ratio = 0.5
texture = ExtResource( 11 )
expand = true
stretch_mode = 6

[node name="MarginContainer2" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/PurchaseTowers"]
margin_left = 132.0
margin_right = 687.0
margin_bottom = 112.0
size_flags_horizontal = 3
custom_constants/margin_right = 16
custom_constants/margin_left = 16

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer/PurchaseTowers/MarginContainer2"]
margin_left = 16.0
margin_right = 539.0
margin_bottom = 112.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 2 )
text = "Use the currency to purchase towers. Each has a unique ability, so be strategic with your placements as to maximize your damage output."
valign = 1
autowrap = true

[node name="FendOff" type="HBoxContainer" parent="HowToPlay/MarginContainer/VBoxContainer"]
margin_top = 561.0
margin_right = 687.0
margin_bottom = 689.0
alignment = 1

[node name="MarginContainer" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/FendOff"]
margin_right = 144.0
margin_bottom = 128.0
custom_constants/margin_left = 16

[node name="TextureRect" type="TextureRect" parent="HowToPlay/MarginContainer/VBoxContainer/FendOff/MarginContainer"]
margin_left = 16.0
margin_right = 144.0
margin_bottom = 128.0
rect_min_size = Vector2( 128, 128 )
size_flags_horizontal = 2
size_flags_vertical = 2
size_flags_stretch_ratio = 0.5
texture = ExtResource( 10 )
expand = true
stretch_mode = 6

[node name="MarginContainer2" type="MarginContainer" parent="HowToPlay/MarginContainer/VBoxContainer/FendOff"]
margin_left = 148.0
margin_right = 687.0
margin_bottom = 128.0
size_flags_horizontal = 3
custom_constants/margin_right = 16
custom_constants/margin_left = 16

[node name="Label" type="Label" parent="HowToPlay/MarginContainer/VBoxContainer/FendOff/MarginContainer2"]
margin_left = 16.0
margin_right = 523.0
margin_bottom = 128.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 2 )
text = "Since the moon fragments energy produces a large beam of light, nearby monsters will be attracted. Your towers exist to keep these monsters off your moon fragment, and keep your farm safe!"
valign = 1
autowrap = true

[node name="Tween" type="Tween" parent="."]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[node name="Music" type="AudioStreamPlayer" parent="."]
pause_mode = 2
stream = ExtResource( 6 )
autoplay = true
bus = "Music"

[node name="Decorations" type="Node2D" parent="."]
visible = false

[node name="Fire" type="Particles2D" parent="Decorations"]
position = Vector2( 275, 427.222 )
z_index = 2
amount = 150
process_material = SubResource( 15 )

[node name="WaterfallBase" type="Particles2D" parent="Decorations"]
position = Vector2( 658.983, 706.987 )
z_index = 2
amount = 500
process_material = SubResource( 22 )
