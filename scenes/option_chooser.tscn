[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/fonts/MinimalPixel v2.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://assets/textures/farm/seeds/tomato.png" type="Texture" id=2]
[ext_resource path="res://themes/main.tres" type="Theme" id=3]
[ext_resource path="res://assets/audio/next.wav" type="AudioStream" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends VBoxContainer

signal chose(item)
signal new_selection(item)

onready var game_manager = get_node(\"/root/GameManager\")
onready var sprite = get_node(\"HBoxContainer/Current\")
onready var item_label = get_node(\"Label\")
onready var audio_player = get_node(\"AudioStreamPlayer2D\")
onready var left_indicator = get_node(\"HBoxContainer/Left\")
onready var right_indicator = get_node(\"HBoxContainer/Right\")

var _loaded_options := []
var _selected_idx := 0

func enable():
	if len(_loaded_options) > 0:
		visible = true

func disable():
	visible = false

func selected():
	if len(_loaded_options) > 0:
		emit_signal(\"chose\", _loaded_options[_selected_idx])

func set_options(options: Array):
	_selected_idx = 0
	_loaded_options = options
	_load_current_option_from_selected()

func get_current_option() -> Item:
	if len(_loaded_options) > 0:
		return _loaded_options[_selected_idx]
		
	return null

func get_number_of_options() -> int:
	return len(_loaded_options)

func _input(event):
	var amt_mult = 1
	if Input.is_action_pressed(\"quantity_change_10_mult\"):
		amt_mult = 10

	# TODO add a color change on the arrows
	if event.is_action_pressed(\"select_next\"):
		right_indicator.modulate = Color.black
		audio_player.play()

	if event.is_action_pressed(\"select_previous\"):
		left_indicator.modulate = Color.black
		audio_player.play()
	
	if event.is_action_released(\"select_next\"):
		right_indicator.modulate = Color.white
		var max_options = len(_loaded_options)-1

		# wrap around, dont use % to avoid division by zero errors
		if _selected_idx == max_options:
			_selected_idx = 0
		else:
			_selected_idx = int(clamp(_selected_idx+1, 0, max_options))

		if len(_loaded_options) > 0:
			_load_current_option_from_selected()
	elif event.is_action_released(\"select_previous\"):
		left_indicator.modulate = Color.white
		var max_options = len(_loaded_options)-1

		if _selected_idx == 0:
			_selected_idx = max_options
		else:
			_selected_idx = int(clamp(_selected_idx-1, 0, max_options))

		if len(_loaded_options) > 0:
			_load_current_option_from_selected()

func _load_current_option_from_selected():
	var selected = get_current_option()
	if selected:
		sprite.texture = selected.texture
		item_label.text = selected.item_name
		emit_signal(\"new_selection\", selected)

func _ready():
	enable()
"

[sub_resource type="DynamicFont" id=2]
size = 14
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 1 )

[node name="ItemChooser" type="VBoxContainer"]
margin_left = -35.9594
margin_top = -50.7653
margin_right = 54.0406
margin_bottom = -1.7653
grow_vertical = 0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_right = 90.0
margin_bottom = 31.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource( 3 )
custom_fonts/font = SubResource( 2 )
text = "Tomato Seeds"
align = 1
valign = 1
autowrap = true

[node name="HBoxContainer" type="HBoxContainer" parent="."]
margin_top = 35.0
margin_right = 90.0
margin_bottom = 49.0
alignment = 1

[node name="Left" type="Label" parent="HBoxContainer"]
margin_left = 32.0
margin_right = 38.0
margin_bottom = 14.0
theme = ExtResource( 3 )
text = "<"

[node name="Current" type="TextureRect" parent="HBoxContainer"]
margin_left = 42.0
margin_right = 47.0
margin_bottom = 14.0
texture = ExtResource( 2 )
stretch_mode = 6

[node name="Right" type="Label" parent="HBoxContainer"]
margin_left = 51.0
margin_right = 57.0
margin_bottom = 14.0
theme = ExtResource( 3 )
text = ">"

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )
